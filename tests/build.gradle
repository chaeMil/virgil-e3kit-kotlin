/*
 * Copyright (c) 2015-2019, Virgil Security, Inc.
 *
 * Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     (1) Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *     (2) Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *     (3) Neither the name of virgil nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def APP_ID = hasProperty('APP_ID') ? APP_ID : System.getenv('APP_ID')
def API_PRIVATE_KEY = hasProperty('API_PRIVATE_KEY') ? API_PRIVATE_KEY : System.getenv('API_PRIVATE_KEY')
def API_PUBLIC_KEY = hasProperty('API_PUBLIC_KEY') ? API_PUBLIC_KEY : System.getenv('API_PUBLIC_KEY')
def API_PUBLIC_KEY_ID = hasProperty('API_PUBLIC_KEY_ID') ? API_PUBLIC_KEY_ID : System.getenv('API_PUBLIC_KEY_ID')
def VIRGIL_BASE_URL = hasProperty('VIRGIL_BASE_URL') ? VIRGIL_BASE_URL : System.getenv('VIRGIL_BASE_URL')

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.virgilsecurity.android.ethree"
        minSdkVersion 21
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        buildTypes.each {
            it.buildConfigField "String", "APP_ID", "$APP_ID"
            it.buildConfigField "String", "API_PRIVATE_KEY", "$API_PRIVATE_KEY"
            it.buildConfigField "String", "API_PUBLIC_KEY", "$API_PUBLIC_KEY"
            it.buildConfigField "String", "API_PUBLIC_KEY_ID", "$API_PUBLIC_KEY_ID"
            it.buildConfigField "String", "VIRGIL_BASE_URL", "$VIRGIL_BASE_URL"
        }
    }
}

dependencies {
    // Internal
    implementation project(':ethree-kotlin')

    // Kotlin
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "com.android.support:appcompat-v7:$versions.appCompat"

    // Coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"

    // Virgil
    androidTestImplementation("com.virgilsecurity:pythia:$versions.pythia") {
        exclude group: 'com.virgilsecurity.sdk', module: 'crypto'
        exclude group: 'com.virgilsecurity.crypto', module: 'common'
        exclude group: 'com.virgilsecurity.crypto', module: 'foundation'
        exclude group: 'com.virgilsecurity.crypto', module: 'pythia'
    }
    androidTestImplementation "com.virgilsecurity.crypto:pythia-android:$versions.virgilCrypto"
    androidTestImplementation("com.virgilsecurity:keyknox:$versions.keyknox") {
        exclude group: 'com.virgilsecurity.sdk', module: 'crypto'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
    }

    // Tests core
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "com.android.support.test:runner:$versions.testsRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$versions.espresso"
}
